-- local GeneralEntries, SubMenu = MenuEntries['meth'], {}

-- local MethActions = {
--     {
--         data = {
--             id = 'meth:enterDoor',
--             title = _L('menu-meth-enterdoor', 'Enter Door'),
--             icon = '#meth-enter-door',
--             event = 'vrp-meth:enterDoor',
--             parameters = {}
--         },
--         isEnabled = function ()
--             return exports['vrp-inventory']:hasEnoughOfItem('methlabkey', 1, false) or exports['vrp-meth']:isInsideUnlockedDoorZone() or isPolice
--         end
--     },
--     {
--         data = {
--             id = 'meth:destroyProperty',
--             title = _L('menu-meth-destroyproperty', 'Destroy Property'),
--             icon = '#meth-destroy-property',
--             event = 'vrp-meth:seizeLab',
--             parameters = {}
--         },
--         isEnabled = function ()
--             return isPolice
--         end
--     },
-- }

-- Citizen.CreateThread(function()
--     for index, data in ipairs(MethActions) do
--         SubMenu[index] = data.data.id
--         MenuItems[data.data.id] = data
--     end
--     GeneralEntries[#GeneralEntries+1] = {
--         data = {
--             id = 'meth',
--             icon = '#meth-actions',
--             title = _L('menu-context-methactions', 'Door Actions'),
--         },
--         subMenus = SubMenu,
--         isEnabled = function()
--             local inside = exports['vrp-meth']:isInsideDoorZone()
--             local hasKey = exports['vrp-inventory']:hasEnoughOfItem('methlabkey', 1, false)
--             local insideUnlocked = exports['vrp-meth']:isInsideUnlockedDoorZone()
--             return not isDead and inside and (hasKey or insideUnlocked or isPolice)
--         end,
--     }
-- end)
